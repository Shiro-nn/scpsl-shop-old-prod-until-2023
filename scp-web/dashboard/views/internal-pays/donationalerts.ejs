<!DOCTYPE html>
<html style="background-color: #0c0d13;" lang="ru">
<head>
<title>fydne // Оплата</title>
<link rel="stylesheet" href="https://cdn.scpsl.shop/scpsl/fonts/Nunito/style.css">
<link rel="stylesheet" href="https://cdn.scpsl.shop/scpsl/fonts/neons/style.css">
<style>
html {
    scroll-behavior: smooth;
    scrollbar-gutter: stable;
}
* {
    scrollbar-color: #e66465 transparent;
    scrollbar-width: thin;
}
::selection {
    color: #e66465;
    background: #00000040;
}
body {
    display: flex;
    flex-direction: column;

    word-break: break-word;
    overflow-x: hidden;
    
    margin: 0;
    padding: 0;

    font-family: 'Nunito', sans-serif;
}

header {
    height: clamp(3.25rem, 1.75rem + 1.875vw, 4rem);
    max-width: clamp(60rem, 40rem + 25vw, 70rem);

    padding-inline: clamp(1.75rem, 1.25rem + .625vw, 2rem);
    margin-block-start: clamp(1.125rem, .875rem + .3125vw, 1.25rem);
    
    gap: clamp(.875rem, .625rem + .3125vw, 1rem);

    display: flex;
    flex-direction: row;
    align-items: center;
    grid-column: full-width;
    justify-content: space-between;

    position: fixed;
    z-index: 666;
    top: 0;
    left: 50%;
    transform: translateX(-50%);

    background: rgb(12 13 19 / .25);
    background: linear-gradient(42deg, rgb(0 0 0 / 20%), rgb(0 0 0 / 40%));
    backdrop-filter: blur(12px);
    /* box-shadow: 0 10px 30px 0 rgba(30, 42, 68, 0.4); */
    border: 1px solid #e66465;
    box-shadow: 0 0 13px 0 #e66465;
    
    width: min(100%, 90vw);
    border-radius: 9999px;
}
header *:focus {
    outline: 2px solid #e66465;
    outline-offset: 2px;
}

header a.logo {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: clamp(.4375rem, .3125rem + .1563vw, .5rem);

    padding: 5px;
    font-family: 'NeonOL';
    font-size: 32px;
    line-height: 35px;
    text-align: center;
    user-select: none;

    background-color: #ce54f3;
    background-image: linear-gradient(155deg, #ff2323, #d445ff);
    background-size: 100%;
    background-repeat: repeat;
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;
    background-clip: text;

    flex-shrink: 0;
    border-radius: clamp(.875rem, .625rem + .3125vw, 1rem);

    color: aliceblue;
    text-decoration: unset;
    transition: color .15s ease, background-color .15s ease;
}

header .panels {
    display: flex;
}
header .panels a {
    color: aliceblue;
    text-decoration: none;
    border-radius: 8px;
    
    margin: 0 5px;
    padding: 5px;
    font-family: 'Nunito';
    font-size: 22px;
    line-height: 35px;
    text-align: center;
    user-select: none;
}

@media screen and (max-width: 1279px) {
    body {
        --content-min-width: 43rem;
        --content-max-width: 100%;
        --content-current-width: 13.75rem + 60.9375vw;
        --breakout-max-width: 72.5rem;
    }
}
@media screen and (max-width: 1023px) {
    header {
        grid-column: content;
        padding-inline: clamp(1.25rem, 1.1364rem + .5682vw, 1.5rem);
    }
}
@media screen and (max-width: 767px) {
    body {
        --base-padding-inline: clamp(.5rem, -.2143rem + 3.5714vw, 1.5rem);
        --fluid-content-width: calc(100% - 2* var(--base-padding-inline));
        --breakout-column: 0px;
        
        padding-bottom: 4rem;
    }
    header {
        gap: clamp(.625rem, .375rem + .3125vw, .75rem);
        justify-content: space-between;
        padding-inline: clamp(.625rem, .375rem + .3125vw, .75rem);
        margin-block-start: clamp(.4375rem, .3125rem + .1563vw, .5rem);
    }
}

background {
    display: flex;
    flex-direction: column-reverse;
    position: fixed;
    
    width: 100%;
    height: clamp(20vh, 700px, 90vh);

    /*background-image: linear-gradient(#e66465, #9198e5);*/
    background-image: linear-gradient(42deg, rgba(48, 236, 195, 0.1) 0%, rgba(231, 219, 50, 0.1) 25%, rgba(238, 45, 158, 0.1) 50%, rgba(175, 43, 236, 0.1) 75%, rgba(37, 109, 243, 0.1) 100%);

    user-select: none;
    pointer-events: none;
}
background hider {
    display: flex;
    
    width: 100vw;
    height: 10%;

    background: linear-gradient(to bottom, #0000, #0c0d13 100%);
    backdrop-filter: blur(12px);

    user-select: none;
    pointer-events: none;
}


.payCard {
    display: flex;
    justify-content: space-between;
    position: relative;

    border-radius: 36px;
    max-width: 1200px;
    margin: 0 auto;
    padding: 3em;
    padding-top: 5em;
    margin-top: max(100px, 6em);
    box-shadow: 0px 4px 14px 2px rgba(0, 0, 0, 0.1);
    
    background: #15172170;
    border: 1px solid #151721;
    backdrop-filter: blur(6px);
}
.payCard .form {
    min-width: 555px;
}

.payCard .form .head {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    flex-direction: initial;
    margin-bottom: 5em;
}
.payCard .form .head info {
    display: flex;
    flex-direction: column;
    margin-right: 10px;
}
.payCard .form .head info h1 {
    font-size: 1.75em;
    font-weight: 800;
    color: #e66465;
    margin: 0;
}
.payCard .form .head info span {
    color: grey;
    font-size: 16px;
    font-weight: 500;
}
.payCard .form .head .timer {
    font-size: 1.35em;
    font-weight: 500;
    user-select: none;
}
.payCard .form .head .timer .box {
    background-color: #471a1a;
    color: aliceblue;
    height: 1.9em;
    width: 1.3em;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border-radius: 4px;
    margin-left: -4px;
}
.payCard .form .head .timer .divider {
    position: relative;
    right: 2px;
    color: aliceblue;
}

.payCard .form section iframe {
    display: flex;
    width: 100%;
    height: 240px;
    border-radius: 24px;
    outline: 0;
    user-select: none;
}





.waiting {
    margin: auto;
}

.waiting .loader {
    margin: auto;
    border-radius: 32px;
    position: relative;
    width: 300px;
    height: 10px;
    background: #00000000;
    -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);
}

.waiting .loader::before {
    border-radius: 32px;
    position: absolute;
    content: '';
    inset: 0;
    background: linear-gradient(90deg, #fb0094, #00f, #0f0, #ff0, #fb0094, #00f, #0f0, #ff0, #fb0094);
    animation: animate 20s linear infinite;
    background-size: 500%;
}

.waiting .loader::after {
    border-radius: 32px;
    position: absolute;
    content: '';
    inset: 0;
    background: linear-gradient(90deg, #fb0094, #00f, #0f0, #ff0, #fb0094, #00f, #0f0, #ff0, #fb0094);
    animation: animate 20s linear infinite;
    background-size: 500%;
    filter: blur(20px);
}

@keyframes animate {
    from{
        background-position: 500% 0;
    }
    to{
        background-position: 0 0;
    }
}

.waiting h1 {
    margin-top: 30px;
    color: antiquewhite;
    background-color: #ce54f3;
    background-image: linear-gradient(155deg, #ff2323, #d445ff);
    background-size: 100%;
    background-repeat: repeat;
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
    text-align: center;
}

.waiting span {
    margin: auto;
    display: flex;
    justify-content: center;
    color: aliceblue;
}

</style>
</head>
<body>
    <header>
        <a href="/" class="logo">fydne</a>
        <div class="panels">
            <a href="/profile">Профиль</a>
            <a href="/donate">Донат</a>
        </div>
    </header>

    <background><hider></hider></background>

    <div class="payCard">
        <div class="form">
            <div class="head">
                <info>
                    <h1>Пополнение баланса</h1>
                    <span>Метод: DonationAlerts | <%= system %></span>
                </info>
                <div class="timer">
                    <span class="box" id="min-1">0</span>
                    <span class="box" id="min-2">0</span>
                    <span class="divider">:</span>
                    <span class="box" id="sec-1">0</span>
                    <span class="box" id="sec-2">0</span>
                </div>
            </div>
            <section>
                <div class="waiting">
                    <div class="loader"></div>
                    <h1>Создание оплаты</h1>
                    <span></span>
                </div>
                <iframe style="display: none;" credentialless allowtransparency="true" frameborder="0"></iframe>
            </section>
        </div>
    </div>
<script>
window.onmessage = function(event){
    let json = null;
    try { json = JSON.parse(event.data); } catch { }

    if (!json) {
        return;
    }

    if (json.action == 'pageLoad') {
        const waiting = document.querySelector('.waiting');
        const iframe = document.querySelector('iframe');

        if (waiting) {
            waiting.style.display = 'none';
        }
        if (iframe) {
            iframe.style.display = '';
        }
    }

    if (json.action == '3dsPage') {
        const iframe = document.querySelector('iframe');
        iframe.style.height = '400px';
    }

    if (json.action == '3dsFinish') {
        const iframe = document.querySelector('iframe');
        iframe.style.height = '';
    }

    if (json.type == 'billing' && json.action == 'paySuccess') {
        const waiting = document.querySelector('.waiting');
        const iframe = document.querySelector('iframe');

        if (iframe) {
            iframe.outerHTML = '';
        }
        
        if (waiting) {
            waiting.style.display = '';
            const title = waiting.querySelector('h1');
            const desc = waiting.querySelector('span');
            
            if (title) {
                title.innerHTML = 'Оплата прошла успешно';
            }
            if (desc) {
                desc.innerHTML = 'Баланс будет пополнен в течение минуты';
            }
        } else {
            alert('Оплата прошла успешно, баланс будет пополнен в течение минуты');
            window.location.href = '/profile';
        }
    }
};

window.addEventListener('load', async() => {
    const resp = await fetch('https://www.donationalerts.com/api/v1/payin/invoice', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            comment: '<%= uid %>',
            amount: parseFloat('<%= sum %>'),
            commission_covered: 0,
            currency: 'RUB',
            email: 'no-reply@scpsl.shop',
            extra: {
                apid: '338452562_00148ba6ff11608a7ad796a5c38f68d7'
            },
            message_type: 'text',
            system: '<%= system %>',
            type: 'donation',
            user_id: parseInt('<%= account %>')
        })
    });
    const pay = await resp.json();

    if (pay.success == false) {
        const waiting = document.querySelector('.waiting');

        if (waiting) {
            waiting.style.display = '';
            const title = waiting.querySelector('h1');
            const desc = waiting.querySelector('span');
            
            if (title) {
                title.innerHTML = 'Произошла ошибка при создании оплаты';
            }
            if (desc) {
                desc.innerHTML = pay.errors[0].message;

                if (pay.errors[0].message == 'You have created too many unpaid invoices recently. Please try again later.') {
                desc.innerHTML = 'Вы создали очень много неоплаченных счетов. Попробуйте позже.';
                }
            }
        } else {
            alert('Произошла ошибка при создании оплаты:\n' + pay.errors[0].message);
            window.location.href = '/profile';
        }

        return;
    }

    let redirect_url = pay.data.redirect_url;

    if (pay.data.action == 'wait') {
        while (!redirect_url) {
            try {
                const resp2 = await fetch(`https://www.donationalerts.com/api/v1/payin/invoice?type=donation&id=${pay.data.invoice_id}&hash=${pay.data.hash}`);
                const wait = await resp2.json();

                if (wait.data.action == 'redirect') {
                    redirect_url = wait.data.redirect_url;
                    break;
                }
            } catch (err) {
                console.warn(err);
            }

            await new Promise(resolve => setTimeout(() => resolve(), 1000));
        }
    }

    const iframe = document.querySelector('iframe');
    iframe.src = redirect_url;

    if ('<%=system%>'.toLocaleLowerCase().startsWith('paypal')) {
        window.postMessage('{"type": "billing", "action": "pageLoad"}', '*');
        const iframe = document.querySelector('iframe');
        iframe.style.height = '700px';
    }
});
</script>

<script>
const expiresTime = parseInt('<%= expires %>');
const elements = {
    min1: document.getElementById('min-1'),
    min2: document.getElementById('min-2'),
    sec1: document.getElementById('sec-1'),
    sec2: document.getElementById('sec-2'),
}

setInterval(() => UpdateExpires(), 1000);
UpdateExpires();

function UpdateExpires() {
    const diff_ms = expiresTime - Date.now();
    const diff = new Date(diff_ms < 0 ? 0 : diff_ms);

    const diff_mins = toDoubleString(diff.getMinutes());
    const diff_secs = toDoubleString(diff.getSeconds());

    elements.min1.innerHTML = diff_mins[0];
    elements.min2.innerHTML = diff_mins[1];

    elements.sec1.innerHTML = diff_secs[0];
    elements.sec2.innerHTML = diff_secs[1];
}

function toDoubleString(number) {
    let str = number.toString();

    if (str.length == 1) {
        str = '0' + str;
    }

    return str;
}
</script>
</body>
</html>